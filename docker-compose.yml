
services:
  strapi:
    build: .
    container_name: el-gouna-strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT:-postgres}
      DATABASE_HOST: ${DATABASE_HOST:-strapiDB}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-strapi}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-strapi}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      JWT_SECRET: ${JWT_SECRET:-}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET:-}
      APP_KEYS: ${APP_KEYS:-}
      API_TOKEN_SALT: ${API_TOKEN_SALT:-}
      NODE_ENV: ${NODE_ENV:-production}
      HOST: ${HOST:-0.0.0.0}
      PORT: ${PORT:-1337}
    volumes:
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    image: postgres:15-alpine
    container_name: el-gouna-postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME:-strapi}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      POSTGRES_DB: ${DATABASE_NAME:-strapi}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    networks:
      - strapi

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: el-gouna-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@strapi.io
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    networks:
      - strapi
    depends_on:
      - strapiDB

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
